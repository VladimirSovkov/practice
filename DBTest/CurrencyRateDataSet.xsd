<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="CurrencyRateDataSet" targetNamespace="http://tempuri.org/CurrencyRateDataSet.xsd" xmlns:mstns="http://tempuri.org/CurrencyRateDataSet.xsd" xmlns="http://tempuri.org/CurrencyRateDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="CurrencyRateConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="CurrencyRateConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.DBTest.Properties.Settings.GlobalReference.Default.CurrencyRateConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="CurrencyTableAdapter" GeneratorDataComponentClassName="CurrencyTableAdapter" Name="Currency" UserDataComponentName="CurrencyTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="CurrencyRateConnectionString (Settings)" DbObjectName="CurrencyRate.dbo.Currency" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Currency] WHERE (([CurrencyId] = @Original_CurrencyId) AND ((@IsNull_Сode = 1 AND [Сode] IS NULL) OR ([Сode] = @Original_Сode)) AND ([Name] = @Original_Name))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_CurrencyId" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="CurrencyId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Сode" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Сode" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Сode" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Сode" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Currency] ([CurrencyId], [Сode], [Name]) VALUES (@CurrencyId, @Сode, @Name);
SELECT CurrencyId, Сode, Name FROM Currency WHERE (CurrencyId = @CurrencyId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@CurrencyId" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="CurrencyId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Сode" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Сode" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT CurrencyId, Сode, Name FROM dbo.Currency</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Currency] SET [CurrencyId] = @CurrencyId, [Сode] = @Сode, [Name] = @Name WHERE (([CurrencyId] = @Original_CurrencyId) AND ((@IsNull_Сode = 1 AND [Сode] IS NULL) OR ([Сode] = @Original_Сode)) AND ([Name] = @Original_Name));
SELECT CurrencyId, Сode, Name FROM Currency WHERE (CurrencyId = @CurrencyId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@CurrencyId" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="CurrencyId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Сode" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Сode" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_CurrencyId" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="CurrencyId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Сode" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Сode" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Сode" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Сode" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="CurrencyId" DataSetColumn="CurrencyId" />
              <Mapping SourceColumn="Сode" DataSetColumn="Сode" />
              <Mapping SourceColumn="Name" DataSetColumn="Name" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="CurrencyRateTableAdapter" GeneratorDataComponentClassName="CurrencyRateTableAdapter" Name="CurrencyRate" UserDataComponentName="CurrencyRateTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="CurrencyRateConnectionString (Settings)" DbObjectName="CurrencyRate.dbo.CurrencyRate" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[CurrencyRate] WHERE (([CurrencyRateId] = @Original_CurrencyRateId) AND ([Rate] = @Original_Rate) AND ([CurrencyId] = @Original_CurrencyId) AND ([Date] = @Original_Date))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_CurrencyRateId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CurrencyRateId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@Original_Rate" Precision="9" ProviderType="Decimal" Scale="2" Size="0" SourceColumn="Rate" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_CurrencyId" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="CurrencyId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@Original_Date" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="Date" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[CurrencyRate] ([Rate], [CurrencyId], [Date]) VALUES (@Rate, @CurrencyId, @Date);
SELECT CurrencyRateId, Rate, CurrencyId, Date FROM CurrencyRate WHERE (CurrencyRateId = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@Rate" Precision="9" ProviderType="Decimal" Scale="2" Size="0" SourceColumn="Rate" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@CurrencyId" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="CurrencyId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@Date" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="Date" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT CurrencyRateId, Rate, CurrencyId, Date FROM dbo.CurrencyRate</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[CurrencyRate] SET [Rate] = @Rate, [CurrencyId] = @CurrencyId, [Date] = @Date WHERE (([CurrencyRateId] = @Original_CurrencyRateId) AND ([Rate] = @Original_Rate) AND ([CurrencyId] = @Original_CurrencyId) AND ([Date] = @Original_Date));
SELECT CurrencyRateId, Rate, CurrencyId, Date FROM CurrencyRate WHERE (CurrencyRateId = @CurrencyRateId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@Rate" Precision="9" ProviderType="Decimal" Scale="2" Size="0" SourceColumn="Rate" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@CurrencyId" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="CurrencyId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@Date" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="Date" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_CurrencyRateId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CurrencyRateId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@Original_Rate" Precision="9" ProviderType="Decimal" Scale="2" Size="0" SourceColumn="Rate" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_CurrencyId" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="CurrencyId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@Original_Date" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="Date" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="CurrencyRateId" ColumnName="CurrencyRateId" DataSourceName="CurrencyRate.dbo.CurrencyRate" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@CurrencyRateId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="CurrencyRateId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="CurrencyRateId" DataSetColumn="CurrencyRateId" />
              <Mapping SourceColumn="Rate" DataSetColumn="Rate" />
              <Mapping SourceColumn="CurrencyId" DataSetColumn="CurrencyId" />
              <Mapping SourceColumn="Date" DataSetColumn="Date" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="logTableAdapter" GeneratorDataComponentClassName="logTableAdapter" Name="log" UserDataComponentName="logTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="CurrencyRateConnectionString (Settings)" DbObjectName="CurrencyRate.dbo.[log]" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[log] WHERE (([LogId] = @Original_LogId) AND ([LogLevel] = @Original_LogLevel) AND ([Message] = @Original_Message))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_LogId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="LogId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_LogLevel" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="LogLevel" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Message" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Message" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[log] ([LogLevel], [Message], [Details]) VALUES (@LogLevel, @Message, @Details);
SELECT LogId, LogLevel, Message, Details FROM [log] WHERE (LogId = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@LogLevel" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="LogLevel" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Message" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Message" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Details" Precision="0" ProviderType="Text" Scale="0" Size="0" SourceColumn="Details" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT LogId, LogLevel, Message, Details FROM dbo.[log]</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[log] SET [LogLevel] = @LogLevel, [Message] = @Message, [Details] = @Details WHERE (([LogId] = @Original_LogId) AND ([LogLevel] = @Original_LogLevel) AND ([Message] = @Original_Message));
SELECT LogId, LogLevel, Message, Details FROM [log] WHERE (LogId = @LogId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@LogLevel" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="LogLevel" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Message" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Message" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Details" Precision="0" ProviderType="Text" Scale="0" Size="0" SourceColumn="Details" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_LogId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="LogId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_LogLevel" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="LogLevel" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Message" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Message" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="LogId" ColumnName="LogId" DataSourceName="CurrencyRate.dbo.[log]" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@LogId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="LogId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="LogId" DataSetColumn="LogId" />
              <Mapping SourceColumn="LogLevel" DataSetColumn="LogLevel" />
              <Mapping SourceColumn="Message" DataSetColumn="Message" />
              <Mapping SourceColumn="Details" DataSetColumn="Details" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="CurrencyRateDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="CurrencyRateDataSet" msprop:Generator_UserDSName="CurrencyRateDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Currency" msprop:Generator_TableClassName="CurrencyDataTable" msprop:Generator_TableVarName="tableCurrency" msprop:Generator_TablePropName="Currency" msprop:Generator_RowDeletingName="CurrencyRowDeleting" msprop:Generator_RowChangingName="CurrencyRowChanging" msprop:Generator_RowEvHandlerName="CurrencyRowChangeEventHandler" msprop:Generator_RowDeletedName="CurrencyRowDeleted" msprop:Generator_UserTableName="Currency" msprop:Generator_RowChangedName="CurrencyRowChanged" msprop:Generator_RowEvArgName="CurrencyRowChangeEvent" msprop:Generator_RowClassName="CurrencyRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="CurrencyId" msprop:Generator_ColumnVarNameInTable="columnCurrencyId" msprop:Generator_ColumnPropNameInRow="CurrencyId" msprop:Generator_ColumnPropNameInTable="CurrencyIdColumn" msprop:Generator_UserColumnName="CurrencyId">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="3" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Сode" msprop:Generator_ColumnVarNameInTable="columnСode" msprop:Generator_ColumnPropNameInRow="Сode" msprop:Generator_ColumnPropNameInTable="СodeColumn" msprop:Generator_UserColumnName="Сode" type="xs:int" minOccurs="0" />
              <xs:element name="Name" msprop:Generator_ColumnVarNameInTable="columnName" msprop:Generator_ColumnPropNameInRow="Name" msprop:Generator_ColumnPropNameInTable="NameColumn" msprop:Generator_UserColumnName="Name">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="255" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="CurrencyRate" msprop:Generator_TableClassName="CurrencyRateDataTable" msprop:Generator_TableVarName="tableCurrencyRate" msprop:Generator_TablePropName="CurrencyRate" msprop:Generator_RowDeletingName="CurrencyRateRowDeleting" msprop:Generator_RowChangingName="CurrencyRateRowChanging" msprop:Generator_RowEvHandlerName="CurrencyRateRowChangeEventHandler" msprop:Generator_RowDeletedName="CurrencyRateRowDeleted" msprop:Generator_UserTableName="CurrencyRate" msprop:Generator_RowChangedName="CurrencyRateRowChanged" msprop:Generator_RowEvArgName="CurrencyRateRowChangeEvent" msprop:Generator_RowClassName="CurrencyRateRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="CurrencyRateId" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnCurrencyRateId" msprop:Generator_ColumnPropNameInRow="CurrencyRateId" msprop:Generator_ColumnPropNameInTable="CurrencyRateIdColumn" msprop:Generator_UserColumnName="CurrencyRateId" type="xs:int" />
              <xs:element name="Rate" msprop:Generator_ColumnVarNameInTable="columnRate" msprop:Generator_ColumnPropNameInRow="Rate" msprop:Generator_ColumnPropNameInTable="RateColumn" msprop:Generator_UserColumnName="Rate" type="xs:decimal" />
              <xs:element name="CurrencyId" msprop:Generator_ColumnVarNameInTable="columnCurrencyId" msprop:Generator_ColumnPropNameInRow="CurrencyId" msprop:Generator_ColumnPropNameInTable="CurrencyIdColumn" msprop:Generator_UserColumnName="CurrencyId">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="3" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Date" msprop:Generator_ColumnVarNameInTable="columnDate" msprop:Generator_ColumnPropNameInRow="Date" msprop:Generator_ColumnPropNameInTable="DateColumn" msprop:Generator_UserColumnName="Date" type="xs:dateTime" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="log" msprop:Generator_TableClassName="logDataTable" msprop:Generator_TableVarName="tablelog" msprop:Generator_TablePropName="log" msprop:Generator_RowDeletingName="logRowDeleting" msprop:Generator_RowChangingName="logRowChanging" msprop:Generator_RowEvHandlerName="logRowChangeEventHandler" msprop:Generator_RowDeletedName="logRowDeleted" msprop:Generator_UserTableName="log" msprop:Generator_RowChangedName="logRowChanged" msprop:Generator_RowEvArgName="logRowChangeEvent" msprop:Generator_RowClassName="logRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="LogId" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnLogId" msprop:Generator_ColumnPropNameInRow="LogId" msprop:Generator_ColumnPropNameInTable="LogIdColumn" msprop:Generator_UserColumnName="LogId" type="xs:int" />
              <xs:element name="LogLevel" msprop:Generator_ColumnVarNameInTable="columnLogLevel" msprop:Generator_ColumnPropNameInRow="LogLevel" msprop:Generator_ColumnPropNameInTable="LogLevelColumn" msprop:Generator_UserColumnName="LogLevel">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="20" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Message" msprop:Generator_ColumnVarNameInTable="columnMessage" msprop:Generator_ColumnPropNameInRow="Message" msprop:Generator_ColumnPropNameInTable="MessageColumn" msprop:Generator_UserColumnName="Message">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="200" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Details" msprop:Generator_ColumnVarNameInTable="columnDetails" msprop:Generator_ColumnPropNameInRow="Details" msprop:Generator_ColumnPropNameInTable="DetailsColumn" msprop:Generator_UserColumnName="Details">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Currency" />
      <xs:field xpath="mstns:CurrencyId" />
    </xs:unique>
    <xs:unique name="CurrencyRate_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:CurrencyRate" />
      <xs:field xpath="mstns:CurrencyRateId" />
    </xs:unique>
    <xs:unique name="log_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:log" />
      <xs:field xpath="mstns:LogId" />
    </xs:unique>
  </xs:element>
  <xs:annotation>
    <xs:appinfo>
      <msdata:Relationship name="FK__CurrencyR__Curre__3A81B327" msdata:parent="Currency" msdata:child="CurrencyRate" msdata:parentkey="CurrencyId" msdata:childkey="CurrencyId" msprop:Generator_UserChildTable="CurrencyRate" msprop:Generator_ChildPropName="GetCurrencyRateRows" msprop:Generator_UserRelationName="FK__CurrencyR__Curre__3A81B327" msprop:Generator_ParentPropName="CurrencyRow" msprop:Generator_RelationVarName="relationFK__CurrencyR__Curre__3A81B327" msprop:Generator_UserParentTable="Currency" />
    </xs:appinfo>
  </xs:annotation>
</xs:schema>